#!/usr/bin/env python3
import os
import secrets
import sys
import string
import random

def generate_secret_key(length=32):
    """Generate a secure random string for use as a secret key."""
    alphabet = string.ascii_letters + string.digits
    return ''.join(secrets.choice(alphabet) for _ in range(length))

def create_env_file():
    """Create a .env file with necessary configuration."""
    # Check if .env already exists
    if os.path.exists('.env'):
        while True:
            response = input('.env file already exists. Overwrite? (y/n): ').lower()
            if response == 'y':
                break
            elif response == 'n':
                print("Setup canceled. Existing .env file was not modified.")
                return
            else:
                print("Please enter 'y' or 'n'.")
    
    # Get Discord application details
    print("\n=== Discord OAuth2 Configuration ===")
    print("You'll need to create an application at https://discord.com/developers/applications")
    
    client_id = input("Enter Discord Client ID: ").strip()
    while not client_id:
        print("Client ID cannot be empty.")
        client_id = input("Enter Discord Client ID: ").strip()
    
    client_secret = input("Enter Discord Client Secret: ").strip()
    while not client_secret:
        print("Client Secret cannot be empty.")
        client_secret = input("Enter Discord Client Secret: ").strip()
    
    # Get redirect URI
    print("\nThe redirect URI should point to your auth callback endpoint.")
    print("For local development: http://localhost:5000/callback")
    print("For production: https://yourdomain.com/callback")
    redirect_uri = input("Enter OAuth2 Redirect URI: ").strip()
    while not redirect_uri:
        print("Redirect URI cannot be empty.")
        redirect_uri = input("Enter OAuth2 Redirect URI: ").strip()
    
    # Generate secret key
    secret_key = generate_secret_key()
    
    # Create .env file
    env_content = f"""# CollectClock Environment Configuration
# Generated by setup.py

# Discord OAuth2 Settings
DISCORD_CLIENT_ID={client_id}
DISCORD_CLIENT_SECRET={client_secret}
DISCORD_REDIRECT_URI={redirect_uri}

# Flask Application Settings
SECRET_KEY={secret_key}

# Database Settings (SQLite by default)
# DATABASE_URL=sqlite:///collectclock.db
"""
    
    # Write to .env file
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("\nâœ… .env file created successfully!")
    print("Make sure to add .env to your .gitignore file to avoid committing sensitive data.")

if __name__ == "__main__":
    print("CollectClock Environment Setup")
    print("==============================")
    create_env_file()
